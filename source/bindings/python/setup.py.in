# Copyright (c) Microsoft. All rights reserved.
# See https://aka.ms/csspeech/license201809 for the full license information.

from setuptools.command.install import install
from setuptools import dist, find_packages, setup

import os
import re

version = None
try:
    version = os.environ['SPEECHSDK_SEMVER2NOMETA']
    version = re.sub(r'-alpha\.(\d+)\.', r'a\1.dev', version)
    version = re.sub(r'-beta\.(\d+)\.', r'b\1.dev', version)
    version = re.sub(r'-alpha\.(\d+)$', r'a\1', version)
    version = re.sub(r'-beta\.(\d+)$', r'b\1', version)
    version = re.sub(r'-rc\.(\d+)$', r'rc\1', version)
except KeyError:
    if os.path.isfile('version.txt'):
        with open('version.txt') as f:
            version = f.readline().strip() + 'a0.dev0'

with open(os.path.join(*'${PYTHON_DOTTED_NAME}'.split('.'), 'version.py'), 'w') as f:
    f.write('# Autogenerated during install step -- do not edit\n')
    f.write('__version__ = "{}"\n'.format(version))

if version is None:
    raise RuntimeError('Cannot find version information')


class BinaryDistribution(dist.Distribution):
    def is_pure(self):
        return False

    def has_ext_modules(self):
        return True


class InstallPlatlib(install):
    def finalize_options(self):
        install.finalize_options(self)
        self.install_lib = self.install_platlib


setup(
    name='${PYTHON_PACKAGE_NAME}',
    version=version,
    distclass=BinaryDistribution,
    packages=['${PYTHON_DOTTED_NAME}'],
    package_dir={'${PYTHON_DOTTED_NAME}': '${PYTHON_PACKAGE_REL_PATH}'},
    package_data={
        '${PYTHON_DOTTED_NAME}': [
            ${PYTHON_LIBS}
        ],
    },
    include_package_data=True,
    cmdclass={'install': InstallPlatlib},
    classifiers=[
        'Development Status :: 5 - Production/Stable',
        'Intended Audience :: Developers',
        'License :: OSI Approved :: Apache Software License',
        'Operating System :: POSIX :: Linux',
        'Operating System :: MacOS :: MacOS X',
        'Operating System :: Microsoft :: Windows',
        'Programming Language :: Python',
        'Programming Language :: C++',
        'Topic :: Scientific/Engineering',
        'Topic :: Software Development :: Libraries :: Python Modules'
    ],
)


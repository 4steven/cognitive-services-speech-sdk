project(com.microsoft.cognitiveservices.speech)

find_package(SWIG REQUIRED)
find_package(Java REQUIRED)

if(WIN32 OR UNIX AND NOT ANDROID)
    find_package(JNI REQUIRED)
endif()

include(UseJava)
include(UseSWIG)

#
# Set up the Swig target, ${JAVA_BINDINGS}
#

set(JAVA_BINDINGS Microsoft.CognitiveServices.Speech.java.bindings)

set(SWIG_JAVA_INTERFACE "${PROJECT_SOURCE_DIR}/carbon_java.i")

set(SWIG_PACKAGE "${PROJECT_NAME}.internal")

string(REPLACE . / SWIG_PACKAGE_DIR ${SWIG_PACKAGE})

set(CMAKE_SWIG_OUTDIR ${CMAKE_CURRENT_BINARY_DIR}/swig-generated/${SWIG_PACKAGE_DIR})

file(REMOVE_RECURSE ${CMAKE_SWIG_OUTDIR})
file(MAKE_DIRECTORY ${CMAKE_SWIG_OUTDIR})

if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
    set(CMAKE_CXX_FLAGS "-Wno-unused-function -fno-strict-aliasing")
elseif(ANDROID)
    # Since we use CLANG, we need to set __GNUC__=4 because otherwise the generated Swig bindings won't export the symbols
    set(CMAKE_CXX_FLAGS "-D__GNUC__=4 -std=c++11 -Wall -Wextra -Wno-unused-function -Wno-unused-parameter -fno-strict-aliasing -fPIC")
endif()

# ${SWIG_INTERFACE} and ${SWIG_WRAPPERS} point to common interface / header files
set(SWIG_MODULE_${JAVA_BINDINGS}_EXTRA_DEPS
    ${SWIG_INTERFACE}
    ${SWIG_WRAPPERS}
    ${SPEECH_C_API_HEADERS}
    ${SPEECH_CXX_API_HEADERS})

# warning 401: Nothing known about base class 'X'. Ignored.
# warning 503: Can't wrap 'X' unless renamed to a valid identifier.
set(CMAKE_SWIG_FLAGS -w401,503 -package ${SWIG_PACKAGE})
set_source_files_properties(${SWIG_JAVA_INTERFACE} PROPERTIES CPLUSPLUS ON)

include_directories(${CARBON_C_API})
include_directories(${CARBON_CXX_API})
include_directories(${JAVA_INCLUDE_PATH})
include_directories(${JNI_INCLUDE_DIRS})
include_directories("${PROJECT_SOURCE_DIR}/..")

if("${CMAKE_VERSION}" VERSION_GREATER 3.8)
    swig_add_library(${JAVA_BINDINGS} LANGUAGE java SOURCES ${SWIG_JAVA_INTERFACE})
else()
    swig_add_module(${JAVA_BINDINGS} java ${SWIG_JAVA_INTERFACE})
endif()

if(WIN32 AND SPECTRE_MITIGATION)
    set_property(TARGET ${JAVA_BINDINGS} PROPERTY VS_GLOBAL_SpectreMitigation "Spectre")
endif()

swig_link_libraries(${JAVA_BINDINGS} ${SPEECHSDK_CORE_LIBRARY})

if(WIN32)
    # Ensure we build with debug information (TODO global setting does not apply?)
    set_target_properties(${JAVA_BINDINGS} PROPERTIES LINK_FLAGS "/DEBUG /OPT:REF /OPT:ICF")
endif()

set_target_properties(${SWIG_MODULE_${JAVA_BINDINGS}_REAL_NAME}
  PROPERTIES
  LIBRARY_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
  FOLDER bindings/java)

# Define list of Java sources generated by Swig
# TODO this should be a wildcard, not an explicit list
set(SWIG_JAVA_SOURCES
    ${CMAKE_SWIG_OUTDIR}/AudioInputStream.java
    ${CMAKE_SWIG_OUTDIR}/AudioInputStreamFormat.java
    ${CMAKE_SWIG_OUTDIR}/BaseAsyncRecognizer.java
    ${CMAKE_SWIG_OUTDIR}/BaseRecognizerBase.java
    ${CMAKE_SWIG_OUTDIR}/BaseValueCollection.java
    ${CMAKE_SWIG_OUTDIR}/carbon_java.java
    ${CMAKE_SWIG_OUTDIR}/carbon_javaJNI.java
    ${CMAKE_SWIG_OUTDIR}/EventArgs.java
    ${CMAKE_SWIG_OUTDIR}/FactoryParameter.java
    ${CMAKE_SWIG_OUTDIR}/FactoryParameterCollection.java
    ${CMAKE_SWIG_OUTDIR}/FactoryParameterCollectionBase.java
    ${CMAKE_SWIG_OUTDIR}/ICognitiveServicesSpeechFactory.java
    ${CMAKE_SWIG_OUTDIR}/IntentEventListener.java
    ${CMAKE_SWIG_OUTDIR}/IntentEventSignal.java
    ${CMAKE_SWIG_OUTDIR}/IntentRecognitionEventArgs.java
    ${CMAKE_SWIG_OUTDIR}/IntentRecognitionResult.java
    ${CMAKE_SWIG_OUTDIR}/IntentRecognitionResultPtrFuture.java
    ${CMAKE_SWIG_OUTDIR}/IntentRecognizer.java
    ${CMAKE_SWIG_OUTDIR}/IntentRecognizerBase.java
    ${CMAKE_SWIG_OUTDIR}/IntentTrigger.java
    ${CMAKE_SWIG_OUTDIR}/ISpeechFactory.java

    ${CMAKE_SWIG_OUTDIR}/KeywordRecognitionModel.java
    ${CMAKE_SWIG_OUTDIR}/LanguageUnderstandingModel.java
    ${CMAKE_SWIG_OUTDIR}/OutputFormat.java

    ${CMAKE_SWIG_OUTDIR}/Reason.java
    ${CMAKE_SWIG_OUTDIR}/RecognitionEventArgs.java
    ${CMAKE_SWIG_OUTDIR}/RecognitionEventListener.java
    ${CMAKE_SWIG_OUTDIR}/RecognitionEventSignal.java
    ${CMAKE_SWIG_OUTDIR}/RecognitionResult.java
    ${CMAKE_SWIG_OUTDIR}/Recognizer.java
    ${CMAKE_SWIG_OUTDIR}/RecognizerParameter.java
    ${CMAKE_SWIG_OUTDIR}/RecognizerParameterValueCollection.java
    ${CMAKE_SWIG_OUTDIR}/RecognizerParameterValueCollectionBase.java
    ${CMAKE_SWIG_OUTDIR}/ResultProperty.java
    ${CMAKE_SWIG_OUTDIR}/ResultPropertyValueCollection.java
    ${CMAKE_SWIG_OUTDIR}/ResultPropertyValueCollectionBase.java

    ${CMAKE_SWIG_OUTDIR}/Session.java
    ${CMAKE_SWIG_OUTDIR}/SessionEventArgs.java
    ${CMAKE_SWIG_OUTDIR}/SessionEventListener.java
    ${CMAKE_SWIG_OUTDIR}/SessionEventSignal.java
    ${CMAKE_SWIG_OUTDIR}/SessionParameter.java
    ${CMAKE_SWIG_OUTDIR}/SessionParameterValueCollection.java
    ${CMAKE_SWIG_OUTDIR}/SessionParameterValueCollectionBase.java
    ${CMAKE_SWIG_OUTDIR}/SpeechFactory.java
    ${CMAKE_SWIG_OUTDIR}/SpeechRecognitionEventArgs.java
    ${CMAKE_SWIG_OUTDIR}/SpeechRecognitionEventListener.java
    ${CMAKE_SWIG_OUTDIR}/SpeechRecognitionEventSignal.java
    ${CMAKE_SWIG_OUTDIR}/SpeechRecognitionResult.java
    ${CMAKE_SWIG_OUTDIR}/SpeechRecognitionResultPtrFuture.java
    ${CMAKE_SWIG_OUTDIR}/SpeechRecognizer.java
    ${CMAKE_SWIG_OUTDIR}/SpeechRecognizerBase.java

    ${CMAKE_SWIG_OUTDIR}/SynthesisStatusCode.java
    ${CMAKE_SWIG_OUTDIR}/TranslationRecognizer.java
    ${CMAKE_SWIG_OUTDIR}/TranslationRecognizerBase.java
    ${CMAKE_SWIG_OUTDIR}/TranslationStatusCode.java
    ${CMAKE_SWIG_OUTDIR}/TranslationSynthesisEventListener.java
    ${CMAKE_SWIG_OUTDIR}/TranslationSynthesisEventSignal.java
    ${CMAKE_SWIG_OUTDIR}/TranslationSynthesisResult.java
    ${CMAKE_SWIG_OUTDIR}/TranslationSynthesisResultEventArgs.java
    ${CMAKE_SWIG_OUTDIR}/TranslationTexEventListener.java
    ${CMAKE_SWIG_OUTDIR}/TranslationTextEventSignal.java
    ${CMAKE_SWIG_OUTDIR}/TranslationTextResult.java
    ${CMAKE_SWIG_OUTDIR}/TranslationTextResultEventArgs.java
    ${CMAKE_SWIG_OUTDIR}/TranslationTextResultPtrFuture.java
    ${CMAKE_SWIG_OUTDIR}/StdMapWStringWString.java
    ${CMAKE_SWIG_OUTDIR}/StdMapWStringWStringMapIterator.java

    ${CMAKE_SWIG_OUTDIR}/SWIGTYPE_p_SPXEVENTHANDLE.java
    ${CMAKE_SWIG_OUTDIR}/SWIGTYPE_p_SPXFACTORYHANDLE.java
    ${CMAKE_SWIG_OUTDIR}/SWIGTYPE_p_SPXKEYWORDHANDLE.java
    ${CMAKE_SWIG_OUTDIR}/SWIGTYPE_p_SPXLUMODELHANDLE.java
    ${CMAKE_SWIG_OUTDIR}/SWIGTYPE_p_SPXRECOHANDLE.java
    ${CMAKE_SWIG_OUTDIR}/SWIGTYPE_p_SPXRESULTHANDLE.java
    ${CMAKE_SWIG_OUTDIR}/SWIGTYPE_p_SPXSESSIONHANDLE.java
    ${CMAKE_SWIG_OUTDIR}/SWIGTYPE_p_SPXTRIGGERHANDLE.java

    ${CMAKE_SWIG_OUTDIR}/Value.java
#    ${CMAKE_SWIG_OUTDIR}/ValueCollectionRecognizerProperty.java
#    ${CMAKE_SWIG_OUTDIR}/ValueCollectionRecognizerFactoryParameter.java
#    ${CMAKE_SWIG_OUTDIR}/ValueCollectionSessionParameter.java
    ${CMAKE_SWIG_OUTDIR}/VoidFuture.java
    ${CMAKE_SWIG_OUTDIR}/WstringVector.java
    ${CMAKE_SWIG_OUTDIR}/UInt8Vector.java
)

set_source_files_properties(${SWIG_JAVA_SOURCES} PROPERTIES GENERATED TRUE)

#
# Set up target to build the JAR, ${JAVA_LIB}
#

set(JAVA_LIB ${PROJECT_NAME})

string(REPLACE . / PACKAGE_DIR ${PROJECT_NAME})

set(JAVA_SOURCES
    ${PACKAGE_DIR}/AudioInputStream.java
    ${PACKAGE_DIR}/AudioInputStreamFormat.java
    ${PACKAGE_DIR}/FactoryParameterNames.java
    ${PACKAGE_DIR}/KeywordRecognitionModel.java
    ${PACKAGE_DIR}/ParameterCollection.java
    ${PACKAGE_DIR}/RecognitionErrorEventArgs.java
    ${PACKAGE_DIR}/RecognitionEventArgs.java
    ${PACKAGE_DIR}/RecognitionEventType.java
    ${PACKAGE_DIR}/RecognitionStatus.java
    ${PACKAGE_DIR}/Recognizer.java
    ${PACKAGE_DIR}/RecognizerParameterNames.java
    ${PACKAGE_DIR}/ResultParameterNames.java
    ${PACKAGE_DIR}/SessionEventArgs.java
    ${PACKAGE_DIR}/SessionEventType.java
    ${PACKAGE_DIR}/SpeechFactory.java
    ${PACKAGE_DIR}/SpeechRecognitionResult.java
    ${PACKAGE_DIR}/SpeechRecognitionResultEventArgs.java
    ${PACKAGE_DIR}/SpeechRecognizer.java
    ${PACKAGE_DIR}/OutputFormat.java

    ${PACKAGE_DIR}/intent/IntentRecognitionResult.java
    ${PACKAGE_DIR}/intent/IntentRecognitionResultEventArgs.java
    ${PACKAGE_DIR}/intent/IntentRecognizer.java
    ${PACKAGE_DIR}/intent/LanguageUnderstandingModel.java

    ${PACKAGE_DIR}/translation/TranslationRecognizer.java
    ${PACKAGE_DIR}/translation/TranslationStatus.java
    ${PACKAGE_DIR}/translation/TranslationSynthesisResult.java
    ${PACKAGE_DIR}/translation/TranslationSynthesisResultEventArgs.java
    ${PACKAGE_DIR}/translation/TranslationTextResult.java
    ${PACKAGE_DIR}/translation/TranslationTextResultEventArgs.java
    ${PACKAGE_DIR}/translation/SynthesisStatus.java

    ${PACKAGE_DIR}/util/EventHandler.java
    ${PACKAGE_DIR}/util/EventHandlerImpl.java
    ${PACKAGE_DIR}/util/Contracts.java
)
if(NOT ANDROID)
  list(APPEND JAVA_SOURCES ${PACKAGE_DIR}/NativeLibraryLoader.java)
endif()

enable_language(Java)
add_jar(${JAVA_LIB}
        SOURCES ${SWIG_JAVA_SOURCES} ${JAVA_SOURCES}
        OUTPUT_DIR ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})

add_dependencies(${JAVA_LIB} ${JAVA_BINDINGS} ${SWIG_MODULE_${JAVA_BINDINGS}_REAL_NAME})

set_target_properties(${JAVA_LIB} PROPERTIES FOLDER bindings/java)

# Adding logcat logging
if(ANDROID)
    target_link_libraries(${JAVA_BINDINGS} log)
endif()

# Note: this could also run earlier than post-build
add_custom_command(TARGET ${JAVA_LIB}
                   POST_BUILD
                   COMMAND ${CMAKE_COMMAND} -E tar cvf "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${JAVA_LIB}-src.zip" --format=zip com
                   WORKING_DIRECTORY "${PROJECT_SOURCE_DIR}"
                   COMMENT "Generating src package including javadoc information")

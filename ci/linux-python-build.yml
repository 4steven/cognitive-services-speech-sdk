jobs:
- job: LinuxPythonBuild
  dependsOn: Pre
  condition: and(succeeded(), contains(dependencies.Pre.outputs['var.SPEECHSDK_BUILD_PHASES'], ' LinuxPythonBuild '))
  pool:
    name: Hosted Ubuntu 1604
  timeoutInMinutes: 60
  strategy:
    maxParallel: 1
    matrix:
      Python3.7:
        PythonVersion: 3.7
        pythonIncludePathSuffix: python3.7m
        WheelPythonTag: cp37
      Python3.6:
        PythonVersion: 3.6
        pythonIncludePathSuffix: python3.6m
        WheelPythonTag: cp36
      Python3.5:
        PythonVersion: 3.5
        pythonIncludePathSuffix: python3.5m
        WheelPythonTag: cp35
  variables:
    BuildConfiguration: Release
    BuildPlatform: x64
    OutputDirectory: "$(Build.ArtifactStagingDirectory)/wheelhouse"
  steps:
  - task: ms-devlabs.utilitytasks.task-Shellpp.Shell++@0
    displayName: Set Linux-x64 target platform
    inputs:
      type: InlineScript
      script: |
        . ci/functions.sh
        vsts_setvar SPEECHSDK_TARGET_PLATFORM Linux-x64
        vsts_setvar SPEECHSDK_BUILD_CONFIGURATION "$(BuildConfiguration)"
        vsts_setvar SPEECHSDK_PYTHON_PLATFORM "$(BuildPlatform)"
        vsts_setvar SPEECHSDK_CMAKE_GENERATOR "Unix Makefiles"
  - bash: ./ci/set-variables.sh
    displayName: Set variables
  - bash: ./ci/install-build-dependencies.sh
    displayName: Install build dependencies
  - template: build-python-wheel.yml
    parameters:
      pythonIncludePathSuffix: $(PythonIncludePathSuffix)
      wheelParams: "--plat-name=manylinux1_x86_64 --python-tag=$(WheelPythonTag)"
      postbuildsteps:
        - bash: |
            set -u -x -e -o pipefail
            unstrippedLib="$(OutputDirectory)/libunstripped-$(SPEECHSDK_TARGET_PLATFORM)-$(BuildConfiguration)-py$(PythonVersion)"
            mkdir -p "$unstrippedLib"
            wheel=(build/*.whl)
            [[ ${#wheel[@]} = 1 ]]
            unzip -d repack "${wheel[0]}"
            pythonExtension=(repack/azure_cognitiveservices_speech-*/data/lib/python*/site-packages/azure/cognitiveservices/speech/_speech_py_impl.so)
            [[ ${#pythonExtension[@]} = 1 ]]
            cp --preserve "${pythonExtension[0]}" "$unstrippedLib"
            strip "${pythonExtension[0]}"
            cd repack
            wheel pack --dest-dir ../build .
          displayName: Repack .whl with unstripped library, keep original

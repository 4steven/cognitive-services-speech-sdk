# Variables:
#   UpStreamBuildDefinition - normally 4062 (main build)
#   UpStreamBuildId - where to pick up artifacts from
#   Version - version number to use
#   VstsFeed - which package feed to use (e.g., 6cad1ef4-30c7-40bd-8d67-d624d756c9c8)
resources:
- repo: self
queue:
  name: Hosted VS2017
steps:
- task: DownloadBuildArtifacts@0
  displayName: 'Download Windows artifact'
  enabled: false # not yet needed
  inputs:
    buildType: specific
    project: Skyman
    definition: $(UpStreamBuildDefinition)
    buildId: $(UpStreamBuildId)
    artifactName: Windows
- bash: |
       function vsts_setvar { echo "##vso[task.setvariable variable=$1]$2"; }
       vsts_setvar Basename "SpeechSDK-WindowsSamples-$(Version)"
  displayName: 'Set Basename Variable'
- task: ms-devlabs.utilitytasks.task-Shellpp.Shell++@0
  inputs:
    type: InlineScript
    script: |
       set -e -x -o pipefail
       git clean -fdx samples
       perl ci/patch-samples.pl "$(Version)"
       mkdir "$(Basename)"
       cp --verbose --recursive --preserve license.md ThirdPartyNotices.md samples/{cxx,csharp}_samples "$(Basename)"
       NOW=$(date -Iseconds)
       find "$(Basename)" | xargs touch --date=$NOW
  displayName: 'Create dir for samples'
  timeoutInMinutes: 5
# Create archive from clean directory, before trying to build.
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: $(Basename)
    includeRootFolder: true
    archiveType: zip
    archiveFile: $(Build.ArtifactStagingDirectory)/$(Basename).zip
  displayName: 'Create .zip'
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(Basename)/**/*.sln'
    vstsFeed: '$(VstsFeed)'
  displayName: 'Test - restore packages'
- task: VSBuild@1
  inputs:
    solution: '$(Basename)/**/*.sln'
    platform: x64
    configuration: Release
    maximumCpuCount: true
  displayName: 'Test - build solutions (x64 Release only)'
- task: ms-devlabs.utilitytasks.task-Shellpp.Shell++@0
  enabled: false
  inputs:
    type: InlineScript
    script: |
       set -e -o pipefail
       SHA256_SUM="$(sha256sum "$(cygpath -au "$(Build.ArtifactStagingDirectory)/$(Basename).zip")" | cut -f1 -d' ')"
       # N.B. two spaces in the next line intentional
       echo "$SHA256_SUM  $(Basename).zip"
       function vsts_setvar { echo "##vso[task.setvariable variable=$1]$2"; }
       vsts_setvar WINSAMPLES_SHA256SUM "$SHA256_SUM"
       # checksum is not yet used...
  displayName: 'Compute SHA256 for .zip'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: Windows
    publishLocation: Container
  displayName: 'Publish .zip as an artefact'
